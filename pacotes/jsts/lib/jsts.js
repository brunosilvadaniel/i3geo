/* The JSTS Topology Suite is a collection of JavaScript classes that
implement the fundamental operations required to validate a given
geo-spatial data set to a known topological specification.

Copyright (C) 2011 The Authors

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA */
jsts={version:'1.11-SNAPSHOT'};jsts.IllegalArgumentError=function(message){};jsts.IllegalArgumentError=OpenLayers.Class(Error);jsts.IllegalArgumentError.initialize=function(message){this.name='IllegalArgumentError';this.message=(message||'');};jsts.AbstractMethodInvocationError=function(){};jsts.AbstractMethodInvocationError=OpenLayers.Class(Error);jsts.AbstractMethodInvocationError.initialize=function(){this.name='AbstractMethodInvocationError';this.message='Abstract method called, should be implemented in subclass.';};jsts.geom={};jsts.index={};jsts.index.quadtree={};jsts.io={};jsts.operation={};jsts.geom.Location=function(){};jsts.geom.Location.INTERIOR=0;jsts.geom.Location.BOUNDARY=1;jsts.geom.Location.EXTERIOR=2;jsts.geom.Location.NONE=-1;jsts.geom.Location.toLocationSymbol=function(locationValue){switch(locationValue){case jsts.geom.Location.EXTERIOR:return'e';case jsts.geom.Location.BOUNDARY:return'b';case jsts.geom.Location.INTERIOR:return'i';case jsts.geom.Location.NONE:return'-';}
throw new jsts.IllegalArgumentError('Unknown location value: '+
locationValue);};jsts.geom.Geometry=function(){};jsts.geom.Geometry=OpenLayers.Class();jsts.geom.Geometry.prototype.envelope=null;jsts.geom.Geometry.prototype.precisionModel=null;jsts.geom.Geometry.prototype.getGeometryType=function(){return'Geometry';};jsts.geom.Geometry.hasNonEmptyElements=function(geometries){var i;for(i=0;i<geometries.length;i++){if(!geometries[i].isEmpty()){return true;}}
return false;};jsts.geom.Geometry.hasNullElements=function(array){var i;for(i=0;i<array.length;i++){if(array[i]===null){return true;}}
return false;};jsts.geom.Geometry.prototype.getNumGeometries=function(){return 1;};jsts.geom.Geometry.prototype.getGeometryN=function(n){return this;};jsts.geom.Geometry.prototype.getPrecisionModel=function(){if(this.precisionModel===null){this.precisionModel=new jsts.geom.PrecisionModel();}
return this.precisionModel;};jsts.geom.Geometry.prototype.getCoordinate=function(){return null;};jsts.geom.Geometry.prototype.getCoordinates=function(){return null;};jsts.geom.Geometry.prototype.getNumPoints=function(){return 0;};jsts.geom.Geometry.prototype.isSimple=function(){this.checkNotGeometryCollection(this);var op=new jsts.operation.IsSimpleOp(this);return op.isSimple();};jsts.geom.Geometry.prototype.isValid=function(){var isValidOp=new IsValidOp(this);return isValidOp.isValid();};jsts.geom.Geometry.prototype.isEmpty=function(){return true;};jsts.geom.Geometry.prototype.distance=function(g){return DistanceOp.distance(this,g);};jsts.geom.Geometry.prototype.isWithinDistance=function(geom,distance){var envDist=this.getEnvelopeInternal().distance(geom.getEnvelopeInternal());if(envDist>distance){return false;}
return DistanceOp.isWithinDistance(this,geom,distance);};jsts.geom.Geometry.prototype.getArea=function(){return 0.0;};jsts.geom.Geometry.prototype.getLength=function(){return 0.0;};jsts.geom.Geometry.prototype.getCentroid=function(){if(isEmpty()){return null;}
var cent;var centPt=null;var dim=this.getDimension();if(dim===0){cent=new CentroidPoint();cent.add(this);centPt=cent.getCentroid();}else if(dim===1){cent=new CentroidLine();cent.add(this);centPt=cent.getCentroid();}else{cent=new CentroidArea();cent.add(this);centPt=cent.getCentroid();}
return this.createPointFromInternalCoord(centPt,this);};jsts.geom.Geometry.prototype.getInteriorPoint=function(){var intPt;var interiorPt=null;var dim=getDimension();if(dim===0){intPt=new InteriorPointPoint(this);interiorPt=intPt.getInteriorPoint();}else if(dim===1){intPt=new InteriorPointLine(this);interiorPt=intPt.getInteriorPoint();}else{intPt=new InteriorPointArea(this);interiorPt=intPt.getInteriorPoint();}
return this.createPointFromInternalCoord(interiorPt,this);};jsts.geom.Geometry.prototype.getDimension=function(){return 0;};jsts.geom.Geometry.prototype.getBoundary=function(){return null;};jsts.geom.Geometry.prototype.getBoundaryDimension=function(){return 0;};jsts.geom.Geometry.prototype.getEnvelope=function(){return this.getFactory().toGeometry(this.getEnvelopeInternal());};jsts.geom.Geometry.prototype.getEnvelopeInternal=function(){if(this.envelope===null){this.envelope=this.computeEnvelopeInternal();}
return envelope;};jsts.geom.Geometry.prototype.disjoint=function(g){return!this.intersects(g);};jsts.geom.Geometry.prototype.touches=function(g){if(!this.getEnvelopeInternal().intersects(g.getEnvelopeInternal())){return false;}
return this.relate(g).isTouches(this.getDimension(),g.getDimension());};jsts.geom.Geometry.prototype.intersects=function(g){if(!this.getEnvelopeInternal().intersects(g.getEnvelopeInternal())){return false;}
if(this.isRectangle()){return RectangleIntersects.intersects(this,g);}
if(g.isRectangle()){return RectangleIntersects.intersects(g,this);}
return this.relate(g).isIntersects();};jsts.geom.Geometry.prototype.crosses=function(g){if(!this.getEnvelopeInternal().intersects(g.getEnvelopeInternal())){return false;}
return this.relate(g).isCrosses(this.getDimension(),g.getDimension());};jsts.geom.Geometry.prototype.within=function(g){return g.contains(this);};jsts.geom.Geometry.prototype.contains=function(g){if(!this.getEnvelopeInternal().contains(g.getEnvelopeInternal())){return false;}
if(this.isRectangle()){return RectangleContains.contains(this,g);}
return this.relate(g).isContains();};jsts.geom.Geometry.prototype.overlaps=function(g){if(!this.getEnvelopeInternal().intersects(g.getEnvelopeInternal())){return false;}
return this.relate(g).isOverlaps(this.getDimension(),g.getDimension());};jsts.geom.Geometry.prototype.covers=function(g){if(!this.getEnvelopeInternal().covers(g.getEnvelopeInternal())){return false;}
if(this.isRectangle()){return true;}
return this.relate(g).isCovers();};jsts.geom.Geometry.prototype.coveredBy=function(g){return g.covers(this);};jsts.geom.Geometry.prototype.relate=function(g,intersectionPattern){return this.relate(g).matches(intersectionPattern);};jsts.geom.Geometry.prototype.relate=function(g){this.checkNotGeometryCollection(this);this.checkNotGeometryCollection(g);return RelateOp.relate(this,g);};jsts.geom.Geometry.prototype.jsts_equals=function(g){if(!this.getEnvelopeInternal().equals(g.getEnvelopeInternal())){return false;}
return this.relate(g).isEquals(this.getDimension(),g.getDimension());};jsts.geom.Geometry.prototype.buffer=function(distance){return BufferOp.bufferOp(this,distance);};jsts.geom.Geometry.prototype.buffer=function(distance,quadrantSegments){return BufferOp.bufferOp(this,distance,quadrantSegments);};jsts.geom.Geometry.prototype.buffer=function(distance,quadrantSegments,endCapStyle){return BufferOp.bufferOp(this,distance,quadrantSegments,endCapStyle);};jsts.geom.Geometry.prototype.convexHull=function(){return(new ConvexHull(this)).getConvexHull();};jsts.geom.Geometry.prototype.intersection=function(other){if(this.isEmpty()){return this.getFactory().createGeometryCollection(null);}
if(other.isEmpty()){return this.getFactory().createGeometryCollection(null);}
if(this.isGeometryCollection(this)){var g2=other;}
this.checkNotGeometryCollection(this);this.checkNotGeometryCollection(other);return SnapIfNeededOverlayOp.overlayOp(this,other,OverlayOp.INTERSECTION);};jsts.geom.Geometry.prototype.union=function(other){if(this.isEmpty()){return other.clone();}
if(other.isEmpty()){return this.clone();}
this.checkNotGeometryCollection(this);this.checkNotGeometryCollection(other);return SnapIfNeededOverlayOp.overlayOp(this,other,OverlayOp.UNION);};jsts.geom.Geometry.prototype.difference=function(other){if(this.isEmpty()){return this.getFactory().createGeometryCollection(null);}
if(other.isEmpty()){return this.clone();}
this.heckNotGeometryCollection(this);this.checkNotGeometryCollection(other);return SnapIfNeededOverlayOp.overlayOp(this,other,OverlayOp.DIFFERENCE);};jsts.geom.Geometry.prototype.symDifference=function(other){if(this.isEmpty()){return other.clone();}
if(other.isEmpty()){return this.clone();}
this.checkNotGeometryCollection(this);this.checkNotGeometryCollection(other);return SnapIfNeededOverlayOp.overlayOp(this,other,OverlayOp.SYMDIFFERENCE);};jsts.geom.Geometry.prototype.union=function(){return UnaryUnionOp.union(this);};jsts.geom.Geometry.prototype.equalsExact=function(other,tolerance){throw new jsts.AbstractMethodInvocationError();};jsts.geom.Geometry.prototype.clone=function(){var clone=new jsts.geom.Geometry(this.factory);if(clone.envelope!==null){clone.envelope=new jsts.geom.Envelope(clone.envelope);}
return clone;};jsts.geom.Geometry.prototype.normalize=function(){};jsts.geom.Geometry.prototype.compareTo=function(other){if(this.getClassSortIndex()!==other.getClassSortIndex()){return this.getClassSortIndex()-other.getClassSortIndex();}
if(this.isEmpty()&&other.isEmpty()){return 0;}
if(this.isEmpty()){return-1;}
if(other.isEmpty()){return 1;}
return this.compareToSameClass(o);};jsts.geom.Geometry.prototype.compareTo=function(other,comp){if(this.getClassSortIndex()!==other.getClassSortIndex()){return this.getClassSortIndex()-other.getClassSortIndex();}
if(this.isEmpty()&&other.isEmpty()){return 0;}
if(this.isEmpty()){return-1;}
if(other.isEmpty()){return 1;}
return this.compareToSameClass(o,comp);};jsts.geom.Geometry.prototype.isEquivalentClass=function(other){return other instanceof this.constructor;};jsts.geom.Geometry.prototype.checkNotGeometryCollection=function(g){if(g instanceof jsts.geom.GeometryCollection){throw new Error('This method does not support GeometryCollection');}};jsts.geom.Geometry.prototype.isGeometryCollection=function(){return(this instanceof jsts.geom.GeometryCollection);};jsts.geom.Geometry.prototype.computeEnvelopeInternal=function(){return null;};jsts.geom.Geometry.prototype.compareToSameClass=function(o){return 0;};jsts.geom.Geometry.prototype.compareToSameClass=function(o,comp){return 0;};jsts.geom.Geometry.prototype.compare=function(a,b){var i=a.iterator();var j=b.iterator();while(i.hasNext()&&j.hasNext()){var aElement=i.next();var bElement=j.next();var comparison=aElement.compareTo(bElement);if(comparison!==0){return comparison;}}
if(i.hasNext()){return 1;}
if(j.hasNext()){return-1;}
return 0;};jsts.geom.Geometry.equal=function(a,b,tolerance){if(tolerance===0){return a.equals(b);}
return a.distance(b)<=tolerance;};jsts.geom.GeometryCollection=function(){};jsts.geom.GeometryCollection=OpenLayers.Class(jsts.geom.Geometry);jsts.geom.MultiPoint=function(){};jsts.geom.MultiPoint=OpenLayers.Class(jsts.geom.GeometryCollection);jsts.geom.Envelope=function(){jsts.geom.Envelope.prototype.init.apply(this,arguments);};jsts.geom.Envelope.prototype.minx=null;jsts.geom.Envelope.prototype.maxx=null;jsts.geom.Envelope.prototype.miny=null;jsts.geom.Envelope.prototype.maxy=null;jsts.geom.Envelope.prototype.init=function(){if(typeof arguments[0]==='number'&&arguments.length===4){this.initFromValues(arguments[0],arguments[1],arguments[2],arguments[3]);}else if(arguments[0]instanceof jsts.geom.Coordinate&&arguments.length===1){this.initFromCoordinate(arguments[0]);}else if(arguments[0]instanceof jsts.geom.Coordinate&&arguments.length===2){this.initFromCoordinates(arguments[0],arguments[1]);}else if(arguments[0]instanceof jsts.geom.Envelope&&arguments.length===1){this.initFromEnvelope(arguments[0]);}};jsts.geom.Envelope.prototype.initFromValues=function(x1,x2,y1,y2){if(x1<x2){this.minx=x1;this.maxx=x2;}else{this.minx=x2;this.maxx=x1;}
if(y1<y2){this.miny=y1;this.maxy=y2;}else{this.miny=y2;this.maxy=y1;}};jsts.geom.Envelope.prototype.initFromCoordinates=function(p1,p2){this.initFromValues(p1.x,p2.x,p1.y,p2.y);};jsts.geom.Envelope.prototype.initFromCoordinate=function(p){this.initFromCoordinates(p.x,p.x,p.y,p.y);};jsts.geom.Envelope.prototype.initFromEnvelope=function(env){this.minx=env.minx;this.maxx=env.maxx;this.miny=env.miny;this.maxy=env.maxy;};jsts.geom.Envelope.prototype.setToNull=function(){this.minx=0;this.maxx=-1;this.miny=0;this.maxy=-1;};jsts.geom.Envelope.prototype.isNull=function(){return this.maxx<this.minx;};jsts.geom.Envelope.prototype.getHeight=function(){if(this.isNull()){return 0;}
return this.maxy-this.miny;};jsts.geom.Envelope.prototype.getWidth=function(){if(this.isNull()){return 0;}
return this.maxx-this.minx;};jsts.geom.Envelope.prototype.getMinX=function(){return this.minx;};jsts.geom.Envelope.prototype.getMaxX=function(){return this.maxx;};jsts.geom.Envelope.prototype.getMinY=function(){return this.miny;};jsts.geom.Envelope.prototype.getMaxY=function(){return this.maxy;};jsts.geom.Envelope.prototype.getArea=function(){return getWidth()*getHeight();};jsts.geom.Envelope.prototype.expandToInclude=function(){if(arguments[0]instanceof jsts.geom.Coordinate){this.expandToIncludeCoordinate(arguments[0]);}else if(arguments[0]instanceof jsts.geom.Envelope){this.expandToIncludeEnvelope(arguments[0]);}else{this.expandToIncludeValues(arguments[0],arguments[1]);}};jsts.geom.Envelope.prototype.expandToIncludeCoordinate=function(p){this.expandToIncludeValues(p.x,p.y);};jsts.geom.Envelope.prototype.expandToIncludeValues=function(x,y){if(this.isNull()){this.minx=x;this.maxx=x;this.miny=y;this.maxy=y;}else{if(x<this.minx){this.minx=x;}
if(x>this.maxx){this.maxx=x;}
if(y<this.miny){this.miny=y;}
if(y>this.maxy){this.maxy=y;}}};jsts.geom.Envelope.prototype.expandToIncludeEnvelope=function(other){if(other.isNull()){return;}
if(this.isNull()){this.minx=other.getMinX();this.maxx=other.getMaxX();this.miny=other.getMinY();this.maxy=other.getMaxY();}else{if(other.minx<this.minx){this.minx=other.minx;}
if(other.maxx>this.maxx){this.maxx=other.maxx;}
if(other.miny<this.miny){this.miny=other.miny;}
if(other.maxy>this.maxy){this.maxy=other.maxy;}}};jsts.geom.Envelope.prototype.expandBy=function(){if(arguments.length===1){this.expandByDistance(arguments[0]);}else{this.expandByDistances(arguments[0],arguments[1]);}};jsts.geom.Envelope.prototype.expandByDistance=function(distance){this.expandByDistances(distance,distance);};jsts.geom.Envelope.prototype.expandByDistances=function(deltaX,deltaY){if(this.isNull()){return;}
this.minx-=deltaX;this.maxx+=deltaX;this.miny-=deltaY;this.maxy+=deltaY;if(this.minx>this.maxx||this.miny>this.maxy){this.setToNull();}};jsts.geom.Envelope.prototype.translate=function(transX,transY){if(this.isNull()){return;}
this.init(this.minx+transX,this.maxx+transX,this.miny+transY,this.maxy+transY);};jsts.geom.Envelope.prototype.centre=function(){if(this.isNull()){return null;}
return new jsts.geom.Coordinate((this.minx+this.maxx)/2.0,(this.miny+this.maxy)/2.0);};jsts.geom.Envelope.prototype.intersection=function(env){if(this.isNull()||env.isNull()||!this.intersects(env)){return new jsts.geom.Envelope();}
var intMinX=this.minx>env.minx?this.minx:env.minx;var intMinY=this.miny>env.miny?this.miny:env.miny;var intMaxX=this.maxx<env.maxx?this.maxx:env.maxx;var intMaxY=this.maxy<env.maxy?this.maxy:env.maxy;return new jsts.geom.Envelope(intMinX,intMaxX,intMinY,intMaxY);};jsts.geom.Envelope.prototype.intersects=function(){if(arguments[0]instanceof jsts.geom.Envelope){return this.intersectsEnvelope(arguments[0]);}else if(arguments[0]instanceof jsts.geom.Coordinate){return this.intersectsCoordinate(arguments[0]);}else{return this.intersectsValues(arguments[0],arguments[1]);}};jsts.geom.Envelope.prototype.intersectsEnvelope=function(other){if(this.isNull()||other.isNull()){return false;}
return!(other.minx>this.maxx||other.maxx<this.minx||other.miny>this.maxy||other.maxy<this.miny);};jsts.geom.Envelope.prototype.intersectsCoordinate=function(p){return this.intersectsValues(p.x,p.y);};jsts.geom.Envelope.prototype.intersectsValues=function(x,y){if(this.isNull()){return false;}
return!(x>this.maxx||x<this.minx||y>this.maxy||y<this.miny);};jsts.geom.Envelope.prototype.contains=function(){if(arguments[0]instanceof jsts.geom.Envelope){return this.containsEnvelope(arguments[0]);}else if(arguments[0]instanceof jsts.geom.Coordinate){return this.containsCoordinate(arguments[0]);}else{return this.containsValues(arguments[0],arguments[1]);}};jsts.geom.Envelope.prototype.containsEnvelope=function(other){return this.coversEnvelope(other);};jsts.geom.Envelope.prototype.containsCoordinate=function(p){return this.coversCoordinate(p);};jsts.geom.Envelope.prototype.containsValues=function(x,y){return this.coversValues(x,y);};jsts.geom.Envelope.prototype.covers=function(){if(p instanceof jsts.geom.Envelope){this.coversEnvelope(arguments[0]);}else if(p instanceof jsts.geom.Coordinate){this.coversCoordinate(arguments[0]);}else{this.coversValues(arguments[0],arguments[1]);}};jsts.geom.Envelope.prototype.coversValues=function(x,y){if(this.isNull()){return false;}
return x>=this.minx&&x<=this.maxx&&y>=this.miny&&y<=this.maxy;};jsts.geom.Envelope.prototype.coversCoordinate=function(p){return this.coversValues(p.x,p.y);};jsts.geom.Envelope.prototype.coversEnvelope=function(other){if(this.isNull()||other.isNull()){return false;}
return other.minx>=this.minx&&other.maxx<=this.maxx&&other.miny>=this.miny&&other.maxy<=this.maxy;};jsts.geom.Envelope.prototype.distance=function(env){if(intersects(env)){return 0;}
var dx=0.0;if(this.maxx<env.minx){dx=env.minx-this.maxx;}
if(this.minx>env.maxx){dx=this.minx-env.maxx;}
var dy=0.0;if(this.maxy<env.miny){dy=env.miny-this.maxy;}
if(this.miny>env.maxy){dy=this.miny-env.maxy;}
if(dx===0.0){return dy;}
if(dy===0.0){return dx;}
return Math.sqrt(dx*dx+dy*dy);};jsts.geom.Envelope.prototype.equals=function(other){if(this.isNull()){return other.isNull();}
return this.maxx===other.maxx&&this.maxy===other.maxy&&this.minx===other.minx&&this.miny===other.miny;};jsts.geom.Envelope.prototype.toString=function(){return'Env['+this.minx+' : '+this.maxx+', '+this.miny+' : '+
this.maxy+']';};jsts.geom.Envelope.intersectsPoint=function(p1,p2,q){var xc1=p1.x<p2.x?p1.x:p2.x;var xc2=p1.x>p2.x?p1.x:p2.x;var yc1=p1.y<p2.y?p1.y:p2.y;var yc2=p1.y>p2.y?p1.y:p2.y;if(((q.x>=xc1)&&(q.x<=xc2))&&((q.y>=yc1)&&(q.y<=yc2))){return true;}
return false;};jsts.geom.Envelope.intersectsEnvelope=function(p1,p2,q1,q2){var minq=Math.min(q1.x,q2.x);var maxq=Math.max(q1.x,q2.x);var minp=Math.min(p1.x,p2.x);var maxp=Math.max(p1.x,p2.x);if(minp>maxq){return false;}
if(maxp<minq){return false;}
minq=Math.min(q1.y,q2.y);maxq=Math.max(q1.y,q2.y);minp=Math.min(p1.y,p2.y);maxp=Math.max(p1.y,p2.y);if(minp>maxq){return false;}
if(maxp<minq){return false;}
return true;};jsts.geom.Envelope.prototype.clone=function(){return new jsts.geom.Envelope(this.minx,this.miny,this.maxx,this.maxy);};jsts.geom.MultiLineString=function(){};jsts.geom.MultiLineString=OpenLayers.Class(jsts.geom.GeometryCollection);jsts.geom.Point=function(){};jsts.geom.Point.prototype.getGeometryType=function(){return'Point';};jsts.geom.MultiPolygon=function(){};jsts.geom.MultiPolygon=OpenLayers.Class(jsts.geom.GeometryCollection);jsts.operation.buffer={};jsts.geom.GeometryFactory=function(){};jsts.geom.GeometryFactory.prototype.createPoint=function(coordinate){if(coordinate===null){return new jsts.geom.Point();}
return new jsts.geom.Point(coordinate.x,coordinate.y);};jsts.geom.GeometryFactory.prototype.createLineString=function(coordinates){return new jsts.geom.LineString(coordinates);};jsts.geom.GeometryFactory.prototype.createLinearRing=function(coordinates){return new jsts.geom.LinearRing(coordinates);};jsts.geom.GeometryFactory.prototype.createPolygon=function(shell,holes){var rings=[shell];if(holes!==undefined){rings=rings.concat(holes);}
return new jsts.geom.Polygon(rings);};jsts.index.quadtree.Node=OpenLayers.Class(jsts.index.quadtree.NodeBase);jsts.index.quadtree.Node.prototype.createNode=function(env){var key,node;key=new jsts.index.quadtree.Key(env);node=new jsts.index.quadtree.Node(key.getEnvelope(),key.getLevel());return node;};jsts.index.quadtree.Node.prototype.createExpanded=function(node,addEnv){var expandEnv=new jsts.geom.Envelope(addEnv),largerNode;if(node!==null){expandEnv.expandToInclude(node.env);}
largerNode=jsts.index.quadtree.Node.prototype.createNode(expandEnv);if(node!==null){largerNode.insertNode(node);}
return largerNode;};jsts.index.quadtree.Node.prototype.initialize=function(env,level){jsts.index.quadtree.NodeBase.prototype.initialize.apply(this,arguments);this.env=env;this.level=level;this.centre=new jsts.geom.Coordinate();this.centre.x=(env.getMinX()+env.getMaxX())/2;this.centre.y=(env.getMinY()+env.getMaxY())/2;};jsts.index.quadtree.Node.prototype.getEnvelope=function(){return this.env;};jsts.index.quadtree.Node.prototype.isSearchMatch=function(searchEnv){return this.env.intersects(searchEnv);};jsts.index.quadtree.Node.prototype.getNode=function(searchEnv){var subnodeIndex=this.getSubnodeIndex(searchEnv,this.centre),node;if(subnodeIndex!==-1){node=this.getSubnode(subnodeIndex);return node.getNode(searchEnv);}else{return this;}};jsts.index.quadtree.Node.prototype.find=function(searchEnv){var subnodeIndex=this.getSubnodeIndex(searchEnv,this.centre),node;if(subnodeIndex===-1){return this;}
if(this.subnode[subnodeIndex]!==null){node=this.subnode[subnodeIndex];return node.find(searchEnv);}
return this;};jsts.index.quadtree.Node.prototype.insertNode=function(node){var index=this.getSubnodeIndex(node.env,this.centre),childNode;if(node.level===this.level-1){this.subnode[index]=node;}else{childNode=this.createSubnode(index);childNode.insertNode(node);this.subnode[index]=childNode;}};jsts.index.quadtree.Node.prototype.getSubnode=function(index){if(this.subnode[index]===null){this.subnode[index].createSubnode(index);}
return this.subnode[index];};jsts.index.quadtree.Node.prototype.createSubnode=function(index){var minx=0.0,maxx=0.0,miny=0.0,maxy=0.0,sqEnv,node;switch(index){case 0:minx=this.env.getMinX();maxx=this.centre.x;miny=this.env.getMinY();maxy=this.centre.y;break;case 1:minx=this.centre.x;maxx=this.env.getMaxX();miny=this.env.getMinY();maxy=this.centre.y;break;case 2:minx=this.env.getMinX();maxx=this.centre.x;miny=this.centre.y;maxy=this.env.getMaxY();break;case 3:minx=this.centre.x;maxx=this.env.getMaxX();miny=this.centre.y;maxy=this.env.getMaxY();break;}
sqEnv=new jsts.geom.Envelope(minx,maxx,miny,maxy);node=new jsts.index.quadtree.Node(sqEnv,this.level-1);return node;};jsts.geom.LineString=function(){};jsts.geom.LineString=OpenLayers.Class(jsts.geom.Geometry);jsts.geom.LineString.prototype.getCoordinates=function(){return this.components;};jsts.geom.LineString.prototype.getCoordinateN=function(n){return this.components[n];};jsts.geom.LineString.prototype.getCoordinate=function(){if(this.isEmpty()){return null;}
return this.getCoordinate(0);};jsts.geom.LineString.prototype.getDimension=function(){return 1;};jsts.geom.LineString.prototype.getBoundaryDimension=function(){if(this.isClosed()){return Dimension.FALSE;}
return 0;};jsts.geom.LineString.prototype.isEmpty=function(){return this.components.length===0;};jsts.geom.LineString.prototype.isClosed=function(){if(this.isEmpty()){return false;}
return this.getCoordinateN(0).equals2D(this.getCoordinateN(this.components.length-1));};jsts.geom.LineString.prototype.isRing=function(){return this.isClosed()&&this.isSimple();};jsts.geom.LineString.prototype.getGeometryType=function(){return'LineString';};jsts.geom.LineString.prototype.equalsExact=function(other,tolerance){var i;if(!this.isEquivalentClass(other)){return false;}
if(this.components.length!==other.components.length){return false;}
for(i=0;i<this.components.length;i++){if(!jsts.geom.Geometry.equal(this.components[i],other.components[i],tolerance)){return false;}}
return true;};jsts.geom.LineString.prototype.clone=function(){var key,coordinate;var points=[];for(key in this.components){if(this.components.hasOwnProperty(key)){coordinate=this.components[key];points.push(coordinate.clone());}}
var clone=new jsts.geom.LineString(points);return clone;};jsts.geom.LinearRing=function(){};jsts.geom.LinearRing=OpenLayers.Class(jsts.geom.LineString);jsts.geom.LinearRing.prototype.getBoundaryDimension=function(){return Dimension.FALSE;};jsts.geom.LinearRing.prototype.isSimple=function(){return true;};jsts.geom.LinearRing.prototype.getGeometryType=function(){return'LinearRing';};jsts.operation.distance.DistanceOp=function(g0,g1,terminateDistance){this.ptLocator=new PointLocator();this.geom=new Geometry[2];geom[0]=g0;geom[1]=g1;this.terminateDistance=terminateDistance;};jsts.operation.distance.DistanceOp.prototype.geom=null;jsts.operation.distance.DistanceOp.prototype.terminateDistance=0.0;jsts.operation.distance.DistanceOp.prototype.ptLocator=null;jsts.operation.distance.DistanceOp.prototype.minDistanceLocation=null;jsts.operation.distance.DistanceOp.prototype.minDistance=Number.MAX_VALUE;jsts.operation.distance.DistanceOp.distance=function(g0,g1){var distOp=new jsts.operation.distance.DistanceOp(g0,g1,0.0);return distOp.distance();};jsts.operation.distance.DistanceOp.isWithinDistance=function(g0,g1,distance){var distOp=new jsts.operation.distance.DistanceOp(g0,g1,distance);return distOp.distance()<=distance;};jsts.operation.distance.DistanceOp.nearestPoints=function(g0,g1){var distOp=new jsts.operation.distance.DistanceOp(g0,g1,0.0);return distOp.nearestPoints();};jsts.operation.distance.DistanceOp.prototype.distance=function(){if(geom[0]==null||geom[1]==null)
throw new jsts.IllegalArgumentError('null geometries are not supported');if(geom[0].isEmpty()||geom[1].isEmpty())
return 0.0;this.computeMinDistance();return minDistance;};jsts.operation.distance.DistanceOp.prototype.nearestPoints=function(){this.computeMinDistance();var nearestPts=[minDistanceLocation[0].getCoordinate(),minDistanceLocation[1].getCoordinate()];return nearestPts;};jsts.operation.distance.DistanceOp.prototype.nearestLocations=function(){this.computeMinDistance();return minDistanceLocation;};jsts.operation.distance.DistanceOp.prototype.updateMinDistance=function(locGeom,flip){if(locGeom[0]==null)
return;if(flip){minDistanceLocation[0]=locGeom[1];minDistanceLocation[1]=locGeom[0];}else{minDistanceLocation[0]=locGeom[0];minDistanceLocation[1]=locGeom[1];}};jsts.operation.distance.DistanceOp.prototype.computeMinDistance=function(){if(minDistanceLocation!=null)
return;minDistanceLocation=new GeometryLocation[2];computeContainmentDistance();if(minDistance<=terminateDistance)
return;computeFacetDistance();};jsts.operation.distance.DistanceOp.prototype.computeContainmentDistance=function(){var locPtPoly=[new GeometryLocation,new GeometryLocation];computeContainmentDistance(0,locPtPoly);if(minDistance<=terminateDistance)
return;computeContainmentDistance(1,locPtPoly);};jsts.operation.distance.DistanceOp.prototype.computeContainmentDistance=function(polyGeomIndex,locPtPoly){var locationsIndex=1-polyGeomIndex;var polys=PolygonExtracter.getPolygons(geom[polyGeomIndex]);if(polys.size()>0){var insideLocs=ConnectedElementLocationFilter.getLocations(geom[locationsIndex]);computeContainmentDistance(insideLocs,polys,locPtPoly);if(minDistance<=terminateDistance){minDistanceLocation[locationsIndex]=locPtPoly[0];minDistanceLocation[polyGeomIndex]=locPtPoly[1];return;}}};jsts.operation.distance.DistanceOp.prototype.computeContainmentDistance=function(locs,polys,locPtPoly){for(var i=0;i<locs.size();i++){var loc=locs.get(i);for(var j=0;j<polys.size();j++){computeContainmentDistance(loc,polys.get(j),locPtPoly);if(minDistance<=terminateDistance)
return;}}};jsts.operation.distance.DistanceOp.prototype.computeContainmentDistance=function(ptLoc,poly,locPtPoly){var pt=ptLoc.getCoordinate();if(Location.EXTERIOR!=ptLocator.locate(pt,poly)){minDistance=0.0;locPtPoly[0]=ptLoc;locPtPoly[1]=new GeometryLocation(poly,pt);return;}};jsts.operation.distance.DistanceOp.prototype.computeFacetDistance=function(){var locGeom=new GeometryLocation[2];var lines0=LinearComponentExtracter.getLines(geom[0]);var lines1=LinearComponentExtracter.getLines(geom[1]);var pts0=PointExtracter.getPoints(geom[0]);var pts1=PointExtracter.getPoints(geom[1]);computeMinDistanceLines(lines0,lines1,locGeom);updateMinDistance(locGeom,false);if(minDistance<=terminateDistance)
return;locGeom[0]=null;locGeom[1]=null;computeMinDistanceLinesPoints(lines0,pts1,locGeom);updateMinDistance(locGeom,false);if(minDistance<=terminateDistance)
return;locGeom[0]=null;locGeom[1]=null;computeMinDistanceLinesPoints(lines1,pts0,locGeom);updateMinDistance(locGeom,true);if(minDistance<=terminateDistance)
return;locGeom[0]=null;locGeom[1]=null;computeMinDistancePoints(pts0,pts1,locGeom);updateMinDistance(locGeom,false);};jsts.operation.distance.DistanceOp.prototype.computeMinDistanceLines=function(lines0,lines1,locGeom){for(var i=0;i<lines0.size();i++){var line0=lines0.get(i);for(var j=0;j<lines1.size();j++){var line1=lines1.get(j);computeMinDistance(line0,line1,locGeom);if(minDistance<=terminateDistance)
return;}}};jsts.operation.distance.DistanceOp.prototype.computeMinDistancePoints=function(points0,points1,locGeom){for(var i=0;i<points0.size();i++){var pt0=points0.get(i);for(var j=0;j<points1.size();j++){var pt1=points1.get(j);var dist=pt0.getCoordinate().distance(pt1.getCoordinate());if(dist<minDistance){minDistance=dist;locGeom[0]=new GeometryLocation(pt0,0,pt0.getCoordinate());locGeom[1]=new GeometryLocation(pt1,0,pt1.getCoordinate());}
if(minDistance<=terminateDistance)
return;}}};jsts.operation.distance.DistanceOp.prototype.computeMinDistanceLinesPoints=function(lines,points,locGeom){for(var i=0;i<lines.size();i++){var line=(LineString);lines.get(i);for(var j=0;j<points.size();j++){var pt=points.get(j);computeMinDistance(line,pt,locGeom);if(minDistance<=terminateDistance)
return;}}};jsts.operation.distance.DistanceOp.prototype.computeMinDistance=function(line0,line1,locGeom){if(line0.getEnvelopeInternal().distance(line1.getEnvelopeInternal())>minDistance){return;}
var coord0=line0.getCoordinates();var coord1=line1.getCoordinates();for(var i=0;i<coord0.length-1;i++){for(var j=0;j<coord1.length-1;j++){var dist=CGAlgorithms.distanceLineLine(coord0[i],coord0[i+1],coord1[j],coord1[j+1]);if(dist<minDistance){minDistance=dist;var seg0=new LineSegment(coord0[i],coord0[i+1]);var seg1=new LineSegment(coord1[j],coord1[j+1]);var closestPt=seg0.closestPoints(seg1);locGeom[0]=new GeometryLocation(line0,i,closestPt[0]);locGeom[1]=new GeometryLocation(line1,j,closestPt[1]);}
if(minDistance<=terminateDistance){return;}}}};jsts.operation.distance.DistanceOp.prototype.computeMinDistance=function(line,pt,locGeom){if(line.getEnvelopeInternal().distance(pt.getEnvelopeInternal())>minDistance){return;}
var coord0=line.getCoordinates();var coord=pt.getCoordinate();for(var i=0;i<coord0.length-1;i++){var dist=CGAlgorithms.distancePointLine(coord,coord0[i],coord0[i+1]);if(dist<minDistance){minDistance=dist;var seg=new LineSegment(coord0[i],coord0[i+1]);var segClosestPoint=seg.closestPoint(coord);locGeom[0]=new GeometryLocation(line,i,segClosestPoint);locGeom[1]=new GeometryLocation(pt,0,coord);}
if(minDistance<=terminateDistance){return;}}};jsts.operation.IsSimpleOp=function(geom){this.geom=geom;};jsts.operation.IsSimpleOp.prototype.geom=null;jsts.operation.IsSimpleOp.prototype.isClosedEndpointsInInterior=true;jsts.operation.IsSimpleOp.prototype.nonSimpleLocation=null;jsts.operation.IsSimpleOp.prototype.IsSimpleOp=function(geom){this.geom=geom;};jsts.operation.IsSimpleOp.prototype.isSimple=function(){this.nonSimpleLocation=null;if(this.geom instanceof jsts.geom.LineString){return this.isSimpleLinearGeometry(this.geom);}
if(this.geom instanceof jsts.geom.MultiLineString){return this.isSimpleLinearGeometry(this.geom);}
if(this.geom instanceof jsts.geom.MultiPoint){return this.isSimpleMultiPoint(this.geom);}
return true;};jsts.operation.IsSimpleOp.prototype.isSimpleLinearGeometry=function(geom){if(geom.isEmpty())return true;var graph=new GeometryGraph(0,geom);var li=new RobustLineIntersector();var si=graph.computeSelfNodes(li,true);if(!si.hasIntersection())return true;if(si.hasProperIntersection()){nonSimpleLocation=si.getProperIntersectionPoint();return false;}
if(this.hasNonEndpointIntersection(graph))return false;if(this.isClosedEndpointsInInterior){if(this.hasClosedEndpointIntersection(graph))return false;}
return true;};jsts.io.WKTWriter=function(){};jsts.io.WKTWriter.prototype.write=function(geometry){var format=new OpenLayers.Format.WKT();var feature=new OpenLayers.Feature.Vector(geometry);var wkt=format.write(feature);return wkt;};jsts.operation.distance={};jsts.geom.Dimension=function(){jsts.geom.Dimension.prototype.init.apply(this,arguments);};jsts.geom.Dimension.P=0;jsts.geom.Dimension.L=1;jsts.geom.Dimension.A=2;jsts.geom.Dimension.FALSE=-1;jsts.geom.Dimension.TRUE=-2;jsts.geom.Dimension.DONTCARE=-3;jsts.geom.Dimension.toDimensionSymbol=function(dimensionValue){switch(dimensionValue){case FALSE:return'F';case TRUE:return'T';case DONTCARE:return'*';case P:return'0';case L:return'1';case A:return'2';}
throw new jsts.IllegalArgumentError('Unknown dimension value: '+
dimensionValue);};jsts.geom.Dimension.toDimensionValue=function(dimensionSymbol){switch(Character.toUpperCase(dimensionSymbol)){case'F':return jsts.geom.Dimension.FALSE;case'T':return jsts.geom.Dimension.TRUE;case'*':return jsts.geom.Dimension.DONTCARE;case'0':return jsts.geom.Dimension.P;case'1':return jsts.geom.Dimension.L;case'2':return jsts.geom.Dimension.A;}
throw new jsts.IllegalArgumentError('Unknown dimension symbol: '+
dimensionSymbol);};jsts.operation.buffer.BufferParameters=function(){};jsts.operation.buffer.BufferParameters.CAP_ROUND=1;jsts.operation.buffer.BufferParameters.CAP_FLAT=2;jsts.operation.buffer.BufferParameters.CAP_SQUARE=3;jsts.operation.buffer.BufferParameters.JOIN_ROUND=1;jsts.operation.buffer.BufferParameters.JOIN_MITRE=2;jsts.operation.buffer.BufferParameters.OIN_BEVEL=3;jsts.operation.buffer.BufferParameters.DEFAULT_QUADRANT_SEGMENTS=8;jsts.operation.buffer.BufferParameters.DEFAULT_MITRE_LIMIT=5.0;jsts.geom.Polygon=function(){};jsts.geom.Polygon=OpenLayers.Class(jsts.geom.Geometry);jsts.geom.Coordinate=function(){};jsts.geom.Coordinate=OpenLayers.Class(jsts.geom.Geometry);jsts.geom.Coordinate.prototype.setCoordinate=function(other){this.x=other.x;this.y=other.y;};jsts.geom.Coordinate.prototype.clone=function(){return new jsts.geom.Coordinate(this.x,this.y);};jsts.geom.Coordinate.prototype.distance=function(p){var dx=this.x-p.x;var dy=this.y-p.y;return Math.sqrt(dx*dx+dy*dy);};jsts.geom.Coordinate.prototype.equals2D=function(other){if(this.x!==other.x){return false;}
if(this.y!==other.y){return false;}
return true;};jsts.geom.Coordinate.prototype.jsts_equals=function(other){if(other.CLASS_NAME!==this.CLASS_NAME){return false;}
return this.equals2D(other);};jsts.geom.Coordinate.prototype.compareTo=function(other){if(this.x<other.x){return-1;}
if(this.x>other.x){return 1;}
if(this.y<other.y){return-1;}
if(this.y>other.y){return 1;}
return 0;};jsts.geom.Coordinate.prototype.getCoordinates=function(){return this.isEmpty()?[]:[this.coordinate];};jsts.geom.Coordinate.prototype.getNumPoints=function(){return this.isEmpty()?0:1;};jsts.geom.Coordinate.prototype.isEmpty=function(){return isNaN(this.x);};jsts.geom.Coordinate.prototype.isSimple=function(){return true;};jsts.geom.Coordinate.prototype.isValid=function(){if(!IsValidOp.isValid(getCoordinate())){return false;}
return true;};jsts.geom.Coordinate.prototype.getDimension=function(){return 0;};jsts.geom.Coordinate.prototype.getBoundaryDimension=function(){return Dimension.FALSE;};jsts.geom.Coordinate.prototype.getX=function(){return this.x;};jsts.geom.Coordinate.prototype.getY=function(){return this.y;};jsts.geom.Coordinate.prototype.getCoordinate=function(){return this;};jsts.geom.Coordinate.prototype.getGeometryType=function(){return'Coordinate';};jsts.geom.Coordinate.prototype.getBoundary=function(){return new jsts.geom.GeometryCollection(null);};jsts.geom.Coordinate.prototype.computeEnvelopeInternal=function(){if(this.isEmpty()){return new jsts.geom.Envelope();}
return new jsts.geom.Envelope(this);};jsts.geom.Coordinate.prototype.equalsExact=function(other,tolerance){if(this.CLASS_NAME!==other.CLASS_NAME){return false;}
if(this.isEmpty()&&other.isEmpty()){return true;}
return jsts.geom.Geometry.equal(other,this,tolerance);};jsts.geom.Coordinate.prototype.reverse=function(){return this.clone();};jsts.geom.Coordinate.prototype.normalize=function(){};jsts.geom.GeometryLocation=function(component,segIndex,pt){this.component=component;this.segIndex=segIndex;this.pt=pt;};jsts.geom.GeometryLocation.INSIDE_AREA=-1;jsts.geom.GeometryLocation.prototype.component=null;jsts.geom.GeometryLocation.prototype.segIndex=null;jsts.geom.GeometryLocation.prototype.pt=null;jsts.geom.GeometryLocation.prototype.getGeometryComponent=function(){return this.component;};jsts.geom.GeometryLocation.prototype.getSegmentIndex=function(){return this.segIndex;};jsts.geom.GeometryLocation.prototype.getCoordinate=function(){return this.pt;};jsts.geom.GeometryLocation.prototype.isInsideArea=function(){return this.segIndex===jsts.geom.GeometryLocation.INSIDE_AREA;};jsts.io.WKTReader=function(){};jsts.io.WKTReader.prototype.read=function(wkt){var geometry=OpenLayers.Geometry.fromWKT(wkt);return geometry;};jsts.operation.buffer.BufferOp=function(g,bufParams){this.argGeom=g;this.bufParams=bufParams?bufParams:new jsts.operation.buffer.BufferParameters();};jsts.operation.buffer.BufferOp.MAX_PRECISION_DIGITS=12;jsts.operation.buffer.BufferOp.precisionScaleFactor=function(g,distance,maxPrecisionDigits){var env=g.getEnvelopeInternal();var envSize=Math.max(env.getHeight(),env.getWidth());var expandByDistance=distance>0.0?distance:0.0;var bufEnvSize=envSize+2*expandByDistance;var bufEnvLog10=(Math.log(bufEnvSize)/Math.log(10)+1.0);var minUnitLog10=bufEnvLog10-maxPrecisionDigits;var scaleFactor=Math.pow(10.0,-minUnitLog10);return scaleFactor;};jsts.operation.buffer.BufferOp.bufferOp=function(g,distance){var gBuf=new jsts.operation.buffer.BufferOp(g);var geomBuf=gBuf.getResultGeometry(distance);return geomBuf;};jsts.operation.buffer.BufferOp.bufferOp=function(g,distance,params){var bufOp=new jsts.operation.buffer.BufferOp(g,params);var geomBuf=bufOp.getResultGeometry(distance);return geomBuf;};jsts.operation.buffer.BufferOp.bufferOp=function(g,distance,quadrantSegments){var bufOp=new jsts.operation.buffer.BufferOp(g);bufOp.setQuadrantSegments(quadrantSegments);var geomBuf=bufOp.getResultGeometry(distance);return geomBuf;};jsts.operation.buffer.BufferOp.bufferOp=function(g,distance,quadrantSegments,endCapStyle){var bufOp=new BufferOp(g);bufOp.setQuadrantSegments(quadrantSegments);bufOp.setEndCapStyle(endCapStyle);var geomBuf=bufOp.getResultGeometry(distance);return geomBuf;};jsts.operation.buffer.BufferOp.prototype.argGeom=null;jsts.operation.buffer.BufferOp.prototype.distance=null;jsts.operation.buffer.BufferOp.prototype.bufParams=null;jsts.operation.buffer.BufferOp.prototype.resultGeometry=null;jsts.operation.buffer.BufferOp.prototype.getResultGeometry=function(dist){this.distance=dist;this.computeGeometry();return resultGeometry;};jsts.operation.buffer.BufferOp.prototype.computeGeometry=function(){this.bufferOriginalPrecision();if(resultGeometry!==null){return;}
var argPM=argGeom.getPrecisionModel();if(argPM.getType()===PrecisionModel.FIXED){this.bufferFixedPrecision(argPM);}
else{this.bufferReducedPrecision();}};jsts.operation.buffer.BufferOp.prototype.bufferReducedPrecision=function(){var precDigits;for(precDigits=MAX_PRECISION_DIGITS;precDigits>=0;precDigits--){try{this.bufferReducedPrecision(precDigits);}catch(ex){saveException=ex;}
if(resultGeometry!==null){return;}}
throw saveException;};jsts.operation.buffer.BufferOp.prototype.bufferOriginalPrecision=function(){var bufBuilder=new jsts.operation.buffer.BufferBuilder(bufParams);resultGeometry=bufBuilder.buffer(argGeom,distance);};jsts.operation.buffer.BufferOp.prototype.bufferReducedPrecision=function(precisionDigits){var sizeBasedScaleFactor=this.precisionScaleFactor(argGeom,distance,precisionDigits);var fixedPM=new jsts.geom.PrecisionModel(sizeBasedScaleFactor);this.bufferFixedPrecision(fixedPM);};jsts.operation.buffer.BufferOp.prototype.bufferFixedPrecision=function(fixedPM){var noder=new ScaledNoder(new MCIndexSnapRounder(new PrecisionModel(1.0)),fixedPM.getScale());var bufBuilder=new jsts.operation.buffer.BufferBuilder(bufParams);bufBuilder.setWorkingPrecisionModel(fixedPM);bufBuilder.setNoder(noder);resultGeometry=bufBuilder.buffer(argGeom,distance);};jsts.index.DoubleBits=OpenLayers.Class();jsts.index.DoubleBits.prototype.powerOf2=function(exp){return Math.pow(exp,2);};jsts.index.DoubleBits.prototype.exponent=function(d){return jsts.index.DoubleBits.prototype.CVTFWD(64,d)-1023;};jsts.index.DoubleBits.prototype.CVTFWD=function(NumW,Qty){var Sign,Expo,Mant,Bin,nb01='';var Inf={32:{d:0x7F,c:0x80,b:0,a:0},64:{d:0x7FF0,c:0,b:0,a:0}};var ExW={32:8,64:11}[NumW],MtW=NumW-ExW-1;if(!Bin){Sign=Qty<0||1/Qty<0;if(!isFinite(Qty)){Bin=Inf[NumW];if(Sign){Bin.d+=1<<(NumW/4-1);}
Expo=Math.pow(2,ExW)-1;Mant=0;}}
if(!Bin){Expo={32:127,64:1023}[NumW];Mant=Math.abs(Qty);while(Mant>=2){Expo++;Mant/=2;}
while(Mant<1&&Expo>0){Expo--;Mant*=2;}
if(Expo<=0){Mant/=2;nb01='Zero or Denormal';}
if(NumW===32&&Expo>254){nb01='Too big for Single';Bin={d:Sign?0xFF:0x7F,c:0x80,b:0,a:0};Expo=Math.pow(2,ExW)-1;Mant=0;}}
return Expo;};jsts.geom.PrecisionModel=function(){jsts.geom.PrecisionModel.prototype.init.apply(this,arguments);};jsts.geom.PrecisionModel.FLOATING=0;jsts.geom.PrecisionModel.FIXED=1;jsts.geom.PrecisionModel.prototype.isFloating=function(){return true;};jsts.geom.PrecisionModel.prototype.getType=function(){return jsts.geom.PrecisionModel.FLOATING;};jsts.index.IntervalSize=OpenLayers.Class();jsts.index.IntervalSize.prototype.MIN_BINARY_EXPONENT=-50;jsts.index.IntervalSize.prototype.isZeroWidth=function(min,max){var width=max-min;if(width===0.0){return true;}
var maxAbs,scaledInterval,level;maxAbs=Math.max(Math.abs(min),Math.abs(max));scaledInterval=width/maxAbs;level=jsts.index.DoubleBits.prototype.exponent(scaledInterval);return level<=jsts.index.IntervalSize.prototype.MIN_BINARY_EXPONENT;};OpenLayers.Geometry.Point=OpenLayers.Class(OpenLayers.Geometry.Point,jsts.geom.Coordinate);jsts.geom.Coordinate=OpenLayers.Geometry.Point;jsts.geom.Point=OpenLayers.Class(jsts.geom.Point,jsts.geom.Coordinate);OpenLayers.Geometry.Collection=OpenLayers.Class(OpenLayers.Geometry.Collection,jsts.geom.GeometryCollection);jsts.geom.GeometryCollection=OpenLayers.Geometry.Collection;OpenLayers.Geometry.MultiPoint=OpenLayers.Class(OpenLayers.Geometry.MultiPoint,jsts.geom.MultiPoint);jsts.geom.MultiPoint=OpenLayers.Geometry.Point;OpenLayers.Geometry.LineString=OpenLayers.Class(OpenLayers.Geometry.LineString,jsts.geom.LineString);jsts.geom.LineString=OpenLayers.Geometry.LineString;OpenLayers.Geometry.MultiLineString=OpenLayers.Class(OpenLayers.Geometry.MultiLineString,jsts.geom.MultiLineString);jsts.geom.MultiLineString=OpenLayers.Geometry.MultiLineString;OpenLayers.Geometry.LinearRing=OpenLayers.Class(OpenLayers.Geometry.LinearRing,jsts.geom.LinearRing);jsts.geom.LinearRing=OpenLayers.Geometry.LinearRing;OpenLayers.Geometry.Polygon=OpenLayers.Class(OpenLayers.Geometry.Polygon,jsts.geom.Polygon);jsts.geom.Polygon=OpenLayers.Geometry.Polygon;OpenLayers.Geometry.MultiPolygon=OpenLayers.Class(OpenLayers.Geometry.MultiPolygon,jsts.geom.MultiPolygon);jsts.geom.MultiPolygon=OpenLayers.Geometry.MultiPolygon;jsts.index.quadtree.Quadtree=OpenLayers.Class();jsts.index.quadtree.Quadtree.prototype.ensureExtent=function(itemEnv,minExtent){var minx,maxx,miny,maxy;minx=itemEnv.getMinX();maxx=itemEnv.getMaxX();miny=itemEnv.getMinY();maxy=itemEnv.getMaxY();if(minx!==maxx&&miny!==maxy){return itemEnv;}
if(minx===maxx){minx=minx-(minExtent/2.0);maxx=minx+(minExtent/2.0);}
if(miny===maxy){miny=miny-(minExtent/2.0);maxy=miny+(minExtent/2.0);}
return new jsts.geom.Envelope(minx,maxx,miny,maxy);};jsts.index.quadtree.Quadtree.prototype.initialize=function(){this.root=new jsts.index.quadtree.Root();this.minExtent=1.0;};jsts.index.quadtree.Quadtree.prototype.depth=function(){return root.depth();};jsts.index.quadtree.Quadtree.prototype.size=function(){return root.size();};jsts.index.quadtree.Quadtree.prototype.insert=function(itemEnv,item){this.collectStats(itemEnv);var insertEnv=this.ensureExtent(itemEnv,this.minExtent);this.root.insert(insertEnv,item);};jsts.index.quadtree.Quadtree.prototype.remove=function(itemEnv,item){var posEnv=this.ensureExtent(itemEnv,this.minExtent);return this.root.remove(posEnv,item);};jsts.index.quadtree.Quadtree.prototype.query=function(){if(arguments.length===1){return jsts.index.quadtree.Quadtree.prototype.queryByEnvelope.apply(this,arguments);}else{jsts.index.quadtree.Quadtree.prototype.queryWithVisitor.apply(this,arguments);}};jsts.index.quadtree.Quadtree.prototype.queryByEnvelope=function(searchEnv){var visitor=new jsts.index.ArrayListVisitor();this.query(searchEnv,visitor);return visitor.getItems();};jsts.index.quadtree.Quadtree.prototype.queryWithVisitor=function(searchEnv,visitor){this.root.visit(searchEnv,visitor);};jsts.index.quadtree.Quadtree.prototype.queryAll=function(){var foundItems=[];this.root.addAllItems(foundItems);return foundItems;};jsts.index.quadtree.Quadtree.prototype.collectStats=function(itemEnv){var delX=itemEnv.getWidth();if(delX<this.minExtent&&delX>0.0){this.minExtent=delX;}
var delY=itemEnv.getHeight();if(delY<minExtent&&delY>0.0){this.minExtent=delY;}};jsts.index.ArrayListVisitor=OpenLayers.Class();jsts.index.ArrayListVisitor.prototype.initialize=function(){this.items=[];};jsts.index.ArrayListVisitor.prototype.visitItem=function(item){this.items.push(item);};jsts.index.ArrayListVisitor.prototype.getItems=function(){return this.items;};jsts.index.quadtree.Key=OpenLayers.Class();jsts.index.quadtree.Key.prototype.computeQuadLevel=function(env){var dx,dy,dMax,level;dx=env.getWidth();dy=env.getHeight();dMax=dx>dy?dx:dy;level=jsts.index.DoubleBits.prototype.exponent(dMax)+1;return level;};jsts.index.quadtree.Key.prototype.initialize=function(itemEnv){this.pt=new jsts.geom.Coordinate();this.level=0;this.env=null;this.computeKey(itemEnv);};jsts.index.quadtree.Key.prototype.getPoint=function(){return this.pt;};jsts.index.quadtree.Key.prototype.getLevel=function(){return this.level;};jsts.index.quadtree.Key.prototype.getEnvelope=function(){return this.env;};jsts.index.quadtree.Key.prototype.getCentre=function(){var x,y;x=(this.env.getMinX()+this.env.getMaxX())/2;y=(this.env.getMinY()+this.env.getMaxY())/2;return new jsts.geom.Coordinate(x,y);};jsts.index.quadtree.Key.prototype.computeKey=function(){if(arguments[0]instanceof jsts.geom.Envelope){this.computeKeyFromEnvelope(arguments[0]);}else{this.computeKeyFromLevel(arguments[0],arguments[1]);}};jsts.index.quadtree.Key.prototype.computeKeyFromEnvelope=function(env){this.level=jsts.index.quadtree.Key.prototype.computeQuadLevel(env);this.env=new jsts.geom.Envelope();this.computeKey(this.level,env);while(!this.env.contains(env)){this.level+=1;this.computeKey(this.level,env);}};jsts.index.quadtree.Key.prototype.computeKeyFromLevel=function(level,env){var quadSize=jsts.index.DoubleBits.prototype.powerOf2(level);this.pt.x=Math.floor(env.getMinX()/quadSize)*quadSize;this.pt.y=Math.floor(env.getMinY()/quadSize)*quadSize;this.env.init(this.pt.x,this.pt.x+quadSize,this.pt.y,this.pt.y+
quadSize);};jsts.index.quadtree.NodeBase=OpenLayers.Class();jsts.index.quadtree.NodeBase.prototype.initialize=function(){this.subnode=new Array(4);this.subnode[0]=null;this.subnode[1]=null;this.subnode[2]=null;this.subnode[3]=null;this.items=[];};jsts.index.quadtree.NodeBase.prototype.gutSubnodeIndex=function(env,centre){var subnodeIndex=-1;if(env.getMinX()>=centre.x){if(env.getMinY()>=centre.y){subnodeIndex=3;}
if(env.getMaxY()<=centre.y){subnodeIndex=1;}}
if(env.getMaxX()<=centre.x){if(env.getMinY()>=centre.y){subnodeIndex=2;}
if(env.getMaxY()<=centre.y){subnodeIndex=0;}}
return subnodeIndex;};jsts.index.quadtree.NodeBase.prototype.getItems=function(){return this.items;};jsts.index.quadtree.NodeBase.prototype.hasItems=function(){return(this.items.length>0);};jsts.index.quadtree.NodeBase.prototype.add=function(item){this.items.push(item);};jsts.index.quadtree.NodeBase.prototype.remove=function(itemEnv,item){if(!this.isSearchMatch(itemEnv)){return false;}
var found=false,i=0;for(i;i<4;i++){if(this.subnode[i]!==null){found=this.subnode[i].remove(itemEnv,item);if(found){if(this.subnode[i].isPrunable()){this.subnode[i]=null;}
break;}}}
if(found){return found;}
if(OpenLayers.Util.indexOf(item)!==-1){OpenLayers.Util.removeItem(this.items,item);found=true;}
return found;};jsts.index.quadtree.NodeBase.prototype.isPrunable=function(){return!(this.hasChildren()||this.hasItems());};jsts.index.quadtree.NodeBase.prototype.hasChildren=function(){var i=0;for(i;i<4;i++){if(this.subnode[i]!==null){return true;}}
return false;};jsts.index.quadtree.NodeBase.prototype.isEmpty=function(){var isEmpty=true;if(this.items.length>0){isEmpty=false;}
var i=0;for(i;i<4;i++){if(this.subnode[i]!==null){if(!this.subnode[i].isEmpty()){isEmpty=false;}}}
return isEmpty;};jsts.index.quadtree.NodeBase.prototype.addAllItems=function(resultItems){resultItems=resultItems.concat(this.items);var i=0;for(i;i<4;i++){if(this.subnode[i]!==null){resultItems=resultItems.concat(this.subnode[i]);}}
return resultItems;};jsts.index.quadtree.NodeBase.prototype.addAllItemsFromOverlapping=function(searchEnv,resultItems){if(!this.isSearchMatch(searchEnv)){return;}
resultItems=resultItems.concat(this.items);var i=0;for(i;i<4;i++){if(this.subnode[i]!==null){resultItems=this.subnode[i].addAllItemsFromOverlapping(searchEnv,resultItems);}}};jsts.index.quadtree.NodeBase.prototype.visit=function(searchEnv,visitor){if(!this.isSearchMatch(searchEnv)){return;}
this.visitItems(searchEnv,visitor);var i=0;for(i;i<4;i++){if(this.subnode[i]!==null){this.subnode[i].visit(searchEnv,visitor);}}};jsts.index.quadtree.NodeBase.prototype.visitItems=function(env,visitor){var i=0,il=this.items.length;for(i;i<il;i++){visitor.visitItem(this.items[i]);}};jsts.index.quadtree.NodeBase.prototype.depth=function(){var maxSubDepth=0,i=0,sqd;for(i;i<4;i++){if(this.subnode[i]!==null){sqd=this.subnode[i].depth();if(sqd>maxSubDepth){maxSubDepth=sqd;}}}
return maxSubDepth+1;};jsts.index.quadtree.NodeBase.prototype.size=function(){var subSize=0,i=0;for(i;i<4;i++){if(this.subnode[i]!==null){subSize+=this.subnode[i].size();}}
return subSize+this.items.length;};jsts.index.quadtree.NodeBase.prototype.getNodeCount=function(){var subSize=0,i=0;for(i;i<4;i++){if(this.subnode[i]!==null){subSize+=this.subnode[i].size();}}
return subSize+1;};jsts.index.quadtree.Root=OpenLayers.Class(jsts.index.quadtree.NodeBase);jsts.index.quadtree.Root.prototype.initialize=function(){jsts.index.quadtree.NodeBase.prototype.initialize.apply(this,arguments);this.origin=new jsts.geom.Coordinate(0.0,0.0);};jsts.index.quadtree.Root.prototype.insert=function(itemEnv,item){var index=this.getSubnodeIndex(itemEnv,this.origin);if(index===-1){this.add(item);return;}
var node=this.subnode[index];if(node===null||!node.getEnvelope().contains(itemEnv)){var largerNode=node.createExpanded(node,itemEnv);this.subnode[index]=largerNode;}
this.insertContained(this.subnode[index],itemEnv,item);};jsts.index.quadtree.Root.prototype.insertContained=function(tree,itemEnv,item){var isZeroX,isZeroY,node;isZeroX=jsts.index.IntervalSize.prototype.isZeroWidth(itemEnv.getMinX(),itemEnv.getMaxX());isZeroY=jsts.index.IntervalSize.prototype.isZeroWidth(itemEnv.getMinY(),itemEnv.getMaxY());if(isZeroX||isZeroY){node=tree.find(itemEnv);}else{node=tree.getNode(itemEnv);}
node.add(item);};jsts.index.quadtree.Root.prototype.isSearchMatch=function(searchEnv){return true;};