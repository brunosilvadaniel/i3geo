pvc.BaseChart.add({colors:null,axes:null,axesList:null,axesByType:null,_axisClassByType:{'color':pvc.visual.ColorAxis,'size':pvc.visual.SizeAxis,'base':pvc.visual.CartesianAxis,'ortho':pvc.visual.CartesianAxis},_axisCreateWhere:{'color':1,'size':2,'base':3,'ortho':3},_axisCreationOrder:['color','size','base','ortho'],_axisCreateIfUnbound:{},_initAxes:function(hasMultiRole){this.axes={};this.axesList=[];this.axesByType={};delete this._rolesColorScale;var dataCellsByAxisTypeThenIndex;if(!this.parent){dataCellsByAxisTypeThenIndex={};this.plotList.forEach(function(plot){this._collectPlotAxesDataCells(plot,dataCellsByAxisTypeThenIndex)},this);this._fixTrendsLabel(dataCellsByAxisTypeThenIndex)}else{dataCellsByAxisTypeThenIndex=this.root._dataCellsByAxisTypeThenIndex}this._dataCellsByAxisTypeThenIndex=dataCellsByAxisTypeThenIndex;var here=0;if(!this.parent){here|=1}if(this.parent||!hasMultiRole){here|=2}this._axisCreateHere=here;this._axisCreationOrder.forEach(function(type){if((this._axisCreateWhere[type]&here)!==0){var AxisClass;var dataCellsByAxisIndex=dataCellsByAxisTypeThenIndex[type];if(dataCellsByAxisIndex){AxisClass=this._axisClassByType[type];if(AxisClass){dataCellsByAxisIndex.forEach(function(dataCells,axisIndex){new AxisClass(this,type,axisIndex)},this)}}else if(this._axisCreateIfUnbound[type]){AxisClass=this._axisClassByType[type];if(AxisClass){new AxisClass(this,type,0)}}}},this);if(this.parent){this.root.axesList.forEach(function(axis){if(!def.hasOwn(this.axes,axis.id)){this._addAxis(axis)}},this)}},_fixTrendsLabel:function(dataCellsByAxisTypeThenIndex){var dataPartDimName=this._getDataPartDimName();if(dataPartDimName){var firstDataCell=def.query(def.ownKeys(dataCellsByAxisTypeThenIndex)).selectMany(function(axisType){return dataCellsByAxisTypeThenIndex[axisType]}).selectMany().first(function(dataCell){return!!dataCell.trend});if(firstDataCell){var trendInfo=pvc.trends.get(firstDataCell.trend.type);var dataPartAtom=trendInfo.dataPartAtom;var trendLabel=firstDataCell.trend.label;if(trendLabel===undefined){trendLabel=dataPartAtom.f}this._firstTrendAtomProto={v:dataPartAtom.v,f:trendLabel}}else{delete this._firstTrendAtomProto}}},_addAxis:function(axis){this.axes[axis.id]=axis;if(axis.chart===this){axis.axisIndex=this.axesList.length}this.axesList.push(axis);var typeAxes=def.array.lazy(this.axesByType,axis.type);var typeIndex=typeAxes.count||0;axis.typeIndex=typeIndex;typeAxes[axis.index]=axis;if(!typeIndex){typeAxes.first=axis}typeAxes.count=typeIndex+1;if(axis.type==='color'&&axis.isBound()){this._onColorAxisScaleSet(axis)}return this},_getAxis:function(type,index){var typeAxes=this.axesByType[type];if(typeAxes&&index!=null&&(+index>=0)){return typeAxes[index]}},_bindAxes:function(){var here=this._axisCreateHere;def.eachOwn(this._dataCellsByAxisTypeThenIndex,function(dataCellsByAxisIndex,type){if((this._axisCreateWhere[type]&here)!==0){dataCellsByAxisIndex.forEach(function(dataCells,index){var axisId=pvc.buildIndexedId(type,index);var axis=this.axes[axisId];if(!axis.isBound()){axis.bind(dataCells)}},this)}},this)},_setAxesScales:function(){if(!this.parent){var colorAxes=this.axesByType.color;if(colorAxes){colorAxes.forEach(function(axis){if(axis.isBound()){axis.calculateScale();this._onColorAxisScaleSet(axis)}},this)}}},_onColorAxisScaleSet:function(axis){switch(axis.index){case 0:this.colors=axis.scheme();break;case 1:if(this._allowV1SecondAxis){this.secondAxisColor=axis.scheme()}break}},_getRoleColorScale:function(roleName){return def.lazy(def.lazy(this,'_rolesColorScale'),roleName,this._createRoleColorScale,this)},_createRoleColorScale:function(roleName){var firstScale,scale;var valueToColorMap={};this.axesByType.color.forEach(function(axis){var axisRole=axis.role;var isRoleCompatible=(axisRole.name===roleName)||(axisRole.sourceRole&&axisRole.sourceRole.name===roleName);if(isRoleCompatible&&axis.scale&&(axis.index===0||axis.option.isSpecified('Colors')||axis.option.isSpecified('Map'))){scale=axis.scale;if(!firstScale){firstScale=scale}axis.domainValues.forEach(addDomainValue)}},this);function addDomainValue(value){var key=''+value;if(!def.hasOwnProp.call(valueToColorMap,key)){valueToColorMap[key]=scale(value)}}if(!firstScale){return pvc.createColorScheme()()}scale=function(value){var key=''+value;if(def.hasOwnProp.call(valueToColorMap,key)){return valueToColorMap[key]}var color=firstScale(value);valueToColorMap[key]=color;return color};def.copy(scale,firstScale);return scale},_onLaidOut:function(){}});