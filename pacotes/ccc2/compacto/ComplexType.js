def.type('pvc.data.ComplexType').init(function(dimTypeSpecs){this._dims={};this._dimsList=[];this._dimsNames=[];this._calculations=[];this._calculatedDimNames={};this._dimsIndexByName=null;this._dimsByGroup={};this._dimsNamesByGroup={};if(dimTypeSpecs){for(var name in dimTypeSpecs){this.addDimension(name,dimTypeSpecs[name])}}}).add({describe:function(){var out=["COMPLEX TYPE INFORMATION",pvc.logSeparator];this._dimsList.forEach(function(type){var features=[];features.push(type.valueTypeName);if(type.isComparable){features.push("comparable")}if(!type.isDiscrete){features.push("continuous")}if(type.isHidden){features.push("hidden")}out.push("  "+type.name+" ("+features.join(', ')+")")});return out.join("\n")},dimensions:function(name,keyArgs){if(name==null){return this._dims}var dimType=def.getOwn(this._dims,name,null);if(!dimType&&def.get(keyArgs,'assertExists',true)){throw def.error.argumentInvalid('name',"Undefined dimension '{0}'",[name])}return dimType},dimensionsList:function(){return this._dimsList},calculatedDimensionsList:function(){return this._calcDimsList},dimensionsNames:function(){return this._dimsNames},groupDimensions:function(group,keyArgs){var dims=def.getOwn(this._dimsByGroup,group);if(!dims&&def.get(keyArgs,'assertExists',true)){throw def.error.operationInvalid("There is no dimension type group with name '{0}'.",[group])}return dims},groupDimensionsNames:function(group,keyArgs){var dimNames=def.getOwn(this._dimsNamesByGroup,group);if(!dimNames&&def.get(keyArgs,'assertExists',true)){throw def.error.operationInvalid("There is no dimension type group with name '{0}'.",[group])}return dimNames},addDimension:function(name,dimTypeSpec){name||def.fail.argumentRequired('name');!def.hasOwn(this._dims,name)||def.fail.operationInvalid("A dimension type with name '{0}' is already defined.",[name]);var dimension=new pvc.data.DimensionType(this,name,dimTypeSpec);this._dims[name]=dimension;this._dimsIndexByName=null;var group=dimension.group;var groupLevel;if(group){var groupDims=def.getOwn(this._dimsByGroup,group),groupDimsNames;if(!groupDims){groupDims=this._dimsByGroup[group]=[];groupDimsNames=this._dimsNamesByGroup[group]=[]}else{groupDimsNames=this._dimsNamesByGroup[group]}groupLevel=def.array.insert(groupDimsNames,name,def.compare);groupLevel=~groupLevel;def.array.insertAt(groupDims,groupLevel,dimension)}var index;var L=this._dimsList.length;if(!group){index=L}else{groupLevel=dimension.groupLevel;for(var i=0;i<L;i++){var dim=this._dimsList[i];if(dim.group===group){if(dim.groupLevel>groupLevel){index=i;break}index=i+1}}if(index==null){index=L}}def.array.insertAt(this._dimsList,index,dimension);def.array.insertAt(this._dimsNames,index,name);if(dimension._calculate){index=def.array.binarySearch(this._calcDimsList,dimension._calculationOrder,def.compare,function(dimType){return dimType._calculationOrder});if(index>=0){index++}else{index=~index}def.array.insertAt(this._calcDimsList,index,dimension)}this._isPctRoleDimTypeMap=null;return dimension},addCalculation:function(calcSpec,dimsOptions){calcSpec||def.fail.argumentRequired('calcSpec');var calculation=calcSpec.calculation||def.fail.argumentRequired('calculations[i].calculation');var dimNames=calcSpec.names;if(typeof dimNames==='string'){dimNames=dimNames.split(/\s*\,\s*/)}else{dimNames=def.array.as(dimNames)}if(dimNames&&dimNames.length){var calcDimNames=this._calculatedDimNames;dimNames.forEach(function(name){if(name){name=name.replace(/^\s*(.+?)\s*$/,"$1");!def.hasOwn(calcDimNames,name)||def.fail.argumentInvalid('calculations[i].names',"Dimension name '{0}' is already being calculated.",[name]);var dimType=this._dims[name];if(!dimType){var dimSpec=pvc.data.DimensionType.extendSpec(name,null,dimsOptions);this.addDimension(name,dimSpec)}calcDimNames[name]=true;dimType._toCalculated()}},this)}this._calculations.push(calculation)},isCalculated:function(dimName){return def.hasOwn(this._calculatedDimNames,dimName)},_calculate:function(complex){var calcs=this._calculations;if(calcs.length){var valuesByName={};calcs.forEach(function(calc){calc(complex,valuesByName)});return valuesByName}},getPlayingPercentVisualRoleDimensionMap:function(){var map=this._isPctRoleDimTypeMap;if(!map){map=this._isPctRoleDimTypeMap=new def.Map(def.query(def.own(this._dims)).where(function(dimType){return dimType.playingPercentVisualRole()}).object({name:function(dimType){return dimType.name}}))}return map},sortDimensionNames:function(dims,nameKey){var dimsIndexByName=this._dimsIndexByName;if(!dimsIndexByName){dimsIndexByName=def.query(this._dimsList).object({name:function(dim){return dim.name},value:function(dim,index){return index}});this._dimsIndexByName=dimsIndexByName}dims.sort(function(da,db){return def.compare(dimsIndexByName[nameKey?nameKey(da):da],dimsIndexByName[nameKey?nameKey(db):db])});return dims}});function compType_dimensionRolesChanged(dimType){this._isPctRoleDimTypeMap=null}