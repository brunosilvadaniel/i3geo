def.type('pvc.visual.Line',pvc.visual.Sign).init(function(panel,protoMark,keyArgs){var pvMark=protoMark.add(pv.Line);this.base(panel,pvMark,keyArgs);this.lock('segmented','smart').lock('antialias',true);if(!def.get(keyArgs,'freePosition',false)){var basePosProp=panel.isOrientationVertical()?"left":"bottom",orthoPosProp=panel.anchorOrtho(basePosProp);this._lockDynamic(orthoPosProp,'y')._lockDynamic(basePosProp,'x')}this._bindProperty('strokeStyle','strokeColor','color')._bindProperty('lineWidth','strokeWidth')}).prototype.property('strokeWidth').constructor.add({_addInteractive:function(keyArgs){keyArgs=def.setDefaults(keyArgs,'noTooltip',true);this.base(keyArgs)},y:function(){return 0},x:function(){return 0},defaultStrokeWidth:function(){return 1.5},interactiveStrokeWidth:function(strokeWidth){if(this.isActiveSeriesAware&&this.scene.isActiveSeries()){return Math.max(1,strokeWidth)*2.5}return strokeWidth},interactiveColor:function(color,type){var scene=this.scene;if(this.showsSelection()&&scene.anySelected()&&!scene.isSelected()){if(this.isActiveSeriesAware&&scene.isActiveSeries()){return pv.Color.names.darkgray.darker().darker()}if(type==='stroke'){return this.dimColor(color,type)}}return this.base(color,type)}});