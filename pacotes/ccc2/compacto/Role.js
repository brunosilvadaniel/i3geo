def.type('pvc.visual.Role').init(function(name,keyArgs){this.name=name;this.label=def.get(keyArgs,'label')||pvc.buildTitleFromName(name);this.index=def.get(keyArgs,'index')||0;this.dimensionDefaults=def.get(keyArgs,'dimensionDefaults')||{};if(def.get(keyArgs,'isRequired',false)){this.isRequired=true}if(def.get(keyArgs,'autoCreateDimension',false)){this.autoCreateDimension=true}var defaultSourceRoleName=def.get(keyArgs,'defaultSourceRole');if(defaultSourceRoleName){this.defaultSourceRoleName=defaultSourceRoleName}var defaultDimensionName=def.get(keyArgs,'defaultDimension');if(defaultDimensionName){this.defaultDimensionName=defaultDimensionName}if(!defaultDimensionName&&this.autoCreateDimension){throw def.error.argumentRequired('defaultDimension')}var requireSingleDimension;var requireIsDiscrete=def.get(keyArgs,'requireIsDiscrete');if(requireIsDiscrete!=null){if(!requireIsDiscrete){requireSingleDimension=true}}if(requireSingleDimension!=null){requireSingleDimension=def.get(keyArgs,'requireSingleDimension',false);if(requireSingleDimension){if(def.get(keyArgs,'isMeasure',false)){this.isMeasure=true;if(def.get(keyArgs,'isPercent',false)){this.isPercent=true}}var valueType=def.get(keyArgs,'valueType',null);if(valueType!==this.valueType){this.valueType=valueType;this.dimensionDefaults.valueType=valueType}}}if(requireSingleDimension!==this.requireSingleDimension){this.requireSingleDimension=requireSingleDimension}if(requireIsDiscrete!=this.requireIsDiscrete){this.requireIsDiscrete=!!requireIsDiscrete;this.dimensionDefaults.isDiscrete=this.requireIsDiscrete}var flatteningMode=def.get(keyArgs,'flatteningMode');if(flatteningMode&&flatteningMode!=this.flatteningMode){this.flatteningMode=flatteningMode}}).add({isRequired:false,requireSingleDimension:false,valueType:null,requireIsDiscrete:null,isMeasure:false,isPercent:false,defaultSourceRoleName:null,defaultDimensionName:null,grouping:null,flatteningMode:'singleLevel',flattenRootLabel:'',autoCreateDimension:false,isReversed:false,label:null,sourceRole:null,firstDimensionType:function(){var g=this.grouping;return g&&g.firstDimensionType()},firstDimensionName:function(){var g=this.grouping;return g&&g.firstDimensionName()},firstDimensionValueType:function(){var g=this.grouping;return g&&g.firstDimensionValueType()},isDiscrete:function(){var g=this.grouping;return g&&g.isDiscrete()},setSourceRole:function(sourceRole){this.sourceRole=sourceRole},setIsReversed:function(isReversed){if(!isReversed){delete this.isReversed}else{this.isReversed=true}},setFlatteningMode:function(flatteningMode){if(!flatteningMode||flatteningMode==='singleLevel'){delete this.flatteningMode}else{this.flatteningMode=flatteningMode}},setFlattenRootLabel:function(flattenRootLabel){if(!flattenRootLabel){delete this.flattenRootLabel}else{this.flattenRootLabel=flattenRootLabel}},flatten:function(data,keyArgs){if(this.grouping){return data.flattenBy(this,keyArgs)}},flattenedGrouping:function(keyArgs){var grouping=this.grouping;if(grouping){keyArgs=def.setDefaults(keyArgs,'flatteningMode',this.flatteningMode,'flattenRootLabel',this.flattenRootLabel);return grouping.ensure(keyArgs)}},select:function(data,keyArgs){var grouping=this.grouping;if(grouping){return data.groupBy(grouping.ensure(keyArgs),keyArgs)}},view:function(complex){var grouping=this.grouping;if(grouping){return grouping.view(complex)}},preBind:function(groupingSpec){this.__grouping=groupingSpec;return this},isPreBound:function(){return!!this.__grouping},preBoundGrouping:function(){return this.__grouping},isBound:function(){return!!this.grouping},postBind:function(type){var grouping=this.__grouping;if(grouping){delete this.__grouping;grouping.bind(type);this.bind(grouping)}return this},bind:function(groupingSpec){if(groupingSpec){if(groupingSpec.isNull()){groupingSpec=null}else{if(this.requireSingleDimension&&!groupingSpec.isSingleDimension){throw def.error.operationInvalid("Role '{0}' only accepts a single dimension.",[this.name])}var valueType=this.valueType;var requireIsDiscrete=this.requireIsDiscrete;groupingSpec.dimensions().each(function(dimSpec){var dimType=dimSpec.type;if(valueType&&dimType.valueType!==valueType){throw def.error.operationInvalid("Role '{0}' cannot be bound to dimension '{1}'. \nIt only accepts dimensions of type '{2}' and not of type '{3}'.",[this.name,dimType.name,pvc.data.DimensionType.valueTypeName(valueType),dimType.valueTypeName])}if(requireIsDiscrete!=null&&dimType.isDiscrete!==requireIsDiscrete){if(requireIsDiscrete){dimType._toDiscrete()}else{throw def.error.operationInvalid("Role '{0}' cannot be bound to dimension '{1}'. \nIt only accepts {2} dimensions.",[this.name,dimType.name,requireIsDiscrete?'discrete':'continuous'])}}},this)}}if(this.grouping){this.grouping.dimensions().each(function(dimSpec){if(dimSpec.type){dimType_removeVisualRole.call(dimSpec.type,this)}},this)}this.grouping=groupingSpec;if(this.grouping){if(this.isReversed){this.grouping=this.grouping.reversed()}this.grouping.dimensions().each(function(dimSpec){dimType_addVisualRole.call(dimSpec.type,this)},this)}return this}});