def.type('pvc.data.GroupingOper',pvc.data.DataOper).init(function(linkParent,groupingSpecs,keyArgs){groupingSpecs||def.fail.argumentRequired('groupingSpecs');this.base(linkParent,keyArgs);this._where=def.get(keyArgs,'where');this._visible=def.get(keyArgs,'visible',null);this._selected=def.get(keyArgs,'selected',null);this._isNull=def.get(keyArgs,'isNull',null);var hasKey=this._selected==null,whereKey='';if(this._where){whereKey=def.get(keyArgs,'whereKey');if(!whereKey){if(!keyArgs||whereKey===null){hasKey=false}else{whereKey=''+def.nextId('dataOperWhereKey');keyArgs.whereKey=whereKey}}}var ids=[];this._groupSpecs=def.array.as(groupingSpecs).map(function(groupSpec){if(groupSpec instanceof pvc.data.GroupingSpec){if(groupSpec.type!==linkParent.type){throw def.error.argumentInvalid('groupingSpecText',"Invalid associated complex type.")}}else{groupSpec=pvc.data.GroupingSpec.parse(groupSpec,linkParent.type)}ids.push(groupSpec.id);return groupSpec});if(hasKey){this.key=ids.join('!!')+"||visible:"+this._visible+"||isNull:"+this._isNull+"||where:"+whereKey}}).add({execute:function(){var datumsQuery=data_whereState(def.query(this._linkParent._datums),{visible:this._visible,selected:this._selected,isNull:this._isNull,where:this._where});var rootNode=this._group(datumsQuery);return this._generateData(rootNode,null,this._linkParent)},executeAdd:function(rootData,datums){var datumsQuery=data_whereState(def.query(datums),{visible:this._visible,selected:this._selected,isNull:this._isNull,where:this._where});var rootNode=this._group(datumsQuery);this._generateData(rootNode,null,this._linkParent,rootData);return rootNode.datums},_group:function(datumsQuery){var rootNode={isRoot:true,treeHeight:def.query(this._groupSpecs).select(function(spec){var levelCount=spec.levels.length;if(!levelCount){return 0}return!!spec.flatteningMode?1:levelCount}).reduce(def.add,0),datums:[]};if(rootNode.treeHeight>0){this._groupSpecRecursive(rootNode,datumsQuery,0)}return rootNode},_groupSpecRecursive:function(specParentNode,specDatumsQuery,specIndex){var groupSpec=this._groupSpecs[specIndex];var levelSpecs=groupSpec.levels;var L=levelSpecs.length;var doFlatten=!!groupSpec.flatteningMode;var nextSpecIndex=specIndex+1;var isLastSpec=(nextSpecIndex>=this._groupSpecs.length);var isPostOrder=doFlatten&&(groupSpec.flatteningMode==='tree-post');var specGroupParent;if(doFlatten){specParentNode.children=[];specParentNode.childrenByKey={};specGroupParent={key:'',absKey:'',atoms:{},datums:[],label:groupSpec.flattenRootLabel,dimNames:[]};if(!isPostOrder){specParentNode.children.push(specGroupParent);specParentNode.childrenByKey['']=specGroupParent}}else{specGroupParent=specParentNode}groupLevelRecursive.call(this,specGroupParent,specDatumsQuery,0);if(doFlatten){if(isPostOrder){specParentNode.children.push(specGroupParent)}specParentNode.datums=specGroupParent.datums}function groupLevelRecursive(levelParentNode,levelDatums,levelIndex){var levelSpec=levelSpecs[levelIndex];if(!doFlatten){levelParentNode.children=[];levelParentNode.groupSpec=groupSpec;levelParentNode.groupLevelSpec=levelSpec}var childNodes=this._groupDatums(levelSpec,levelParentNode,levelDatums,doFlatten);var isLastSpecLevel=levelIndex===L-1;var willRecurseParent=doFlatten&&!isLastSpec;var levelParentDatums=willRecurseParent?[]:levelParentNode.datums;childNodes.forEach(function(child){var childDatums=child.datums;if(!(isLastSpec&&isLastSpecLevel)){child.datums=[]}var specParentChildIndex;if(!doFlatten){levelParentNode.children.push(child)}else{def.array.lazy(levelParentNode,'_children').push(child);if(def.hasOwn(specParentNode.childrenByKey,child.key)){def.array.append(levelParentDatums,childDatums);return}specParentChildIndex=specParentNode.children.length;if(!isPostOrder){specParentNode.children.push(child);specParentNode.childrenByKey[child.key]=child;levelParentNode.isFlattenGroup=true}}if(!isLastSpecLevel){groupLevelRecursive.call(this,child,childDatums,levelIndex+1)}else if(!isLastSpec){this._groupSpecRecursive(child,childDatums,nextSpecIndex)}def.array.append(levelParentDatums,child.datums);if(doFlatten&&isPostOrder){if(def.hasOwn(specParentNode.childrenByKey,child.key)){child.isFlattenGroup||def.assert("Must be a parent for duplicate keys to exist.");if(child._children.length===1){specParentNode.children.splice(specParentChildIndex,specParentNode.children.length-specParentChildIndex);child.isDegenerateFlattenGroup=true}}specParentNode.children.push(child);specParentNode.childrenByKey[child.key]=child;levelParentNode.isFlattenGroup=true}},this);if(willRecurseParent){this._groupSpecRecursive(levelParentNode,levelParentDatums,nextSpecIndex)}}},_groupDatums:function(levelSpec,levelParentNode,levelDatums,doFlatten){var firstDatums=[];var childNodes=new def.OrderedMap();def.query(levelDatums).each(function(datum){var newChild=levelSpec.key(datum);var key=newChild.key;var child=childNodes.get(key);if(child){child.datums.push(datum)}else{child=newChild;child.datums=[datum];if(doFlatten){def.copy(child.atoms,levelParentNode.atoms);if(levelParentNode.dimNames.length){var keySep=datum.owner.keySep;child.absKey=levelParentNode.absKey+keySep+key;var K=keySep.length;var trimKey=child.absKey;while(trimKey.lastIndexOf(keySep)===trimKey.length-K){trimKey=trimKey.substr(0,trimKey.length-K)}child.key=trimKey}else{child.absKey=key}child.dimNames=levelSpec.accDimensionNames()}var datumIndex=def.array.insert(firstDatums,datum,levelSpec.comparer);childNodes.add(key,child,~datumIndex)}});return childNodes},_generateData:function(node,parentNode,parentData,rootData){var data,isNew;if(node.isRoot){if(rootData){data=rootData;data_addDatumsLocal.call(data,node.datums)}else{isNew=true;data=new pvc.data.Data({linkParent:parentData,datums:node.datums});data.treeHeight=node.treeHeight;data._groupOper=this}}else{if(rootData){data=def.get(parentData._childrenByKey,node.key);if(data){data_addDatumsSimple.call(data,node.datums)}}if(!data){isNew=true;var index,siblings;if(rootData&&(siblings=parentData._children)){index=~def.array.binarySearch(siblings,node.datums[0],parentNode.groupLevelSpec.comparer)}data=new pvc.data.Data({parent:parentData,atoms:node.atoms,dimNames:node.dimNames,datums:node.datums,index:index})}}if(isNew&&node.isFlattenGroup){data._isFlattenGroup=true;data._isDegenerateFlattenGroup=!!node.isDegenerateFlattenGroup;var label=node.label;if(label){data.label+=label;data.absLabel+=label}}var childNodes=node.children;if(childNodes&&childNodes.length){if(isNew){data._groupSpec=node.groupSpec;data._groupLevelSpec=node.groupLevelSpec}childNodes.forEach(function(childNode){this._generateData(childNode,node,data,rootData)},this)}else if(isNew&&!node.isRoot){var leafs=data.root._leafs;data.leafIndex=leafs.length;leafs.push(data)}return data}});