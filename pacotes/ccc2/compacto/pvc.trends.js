def.space('pvc.trends',function(trends){var _trends={};def.set(trends,'define',function(type,trendSpec){type||def.fail.argumentRequired('type');trendSpec||def.fail.argumentRequired('trendSpec');def.object.is(trendSpec)||def.fail.argumentInvalid('trendSpec',"Must be a trend specification object.");if(pvc.debug>=2&&def.hasOwn(_trends,type)){pvc.log(def.format("[WARNING] A trend type with the name '{0}' is already defined.",[type]))}var label=trendSpec.label||def.fail.argumentRequired('trendSpec.label');var model=trendSpec.model||def.fail.argumentRequired('trendSpec.model');def.fun.is(model)||def.fail.argumentInvalid('trendSpec.mode',"Must be a function.");var trendInfo={dataPartAtom:{v:'trend',f:label},type:type,label:label,model:model};_trends[type]=trendInfo},'get',function(type){type||def.fail.argumentRequired('type');return def.getOwn(_trends,type)||def.fail.operationInvalid("Undefined trend type '{0}'.",[type])},'has',function(type){return def.hasOwn(_trends,type)},'types',function(){return def.ownKeys(_trends)});trends.define('linear',{label:'Linear trend',model:function(options){var rows=def.get(options,'rows');var funX=def.get(options,'x');var funY=def.get(options,'y');var i=0;var N=0;var sumX=0;var sumY=0;var sumXY=0;var sumXX=0;var parseNum=function(value){return value!=null?(+value):NaN};while(rows.next()){var row=rows.item;var x=funX?parseNum(funX(row)):i;if(!isNaN(x)){var y=parseNum(funY(row));if(!isNaN(y)){N++;sumX+=x;sumY+=y;sumXY+=x*y;sumXX+=x*x}}i++}var alpha,beta;if(N>=2){var avgX=sumX/N;var avgY=sumY/N;var avgXY=sumXY/N;var avgXX=sumXX/N;var den=(avgXX-avgX*avgX);if(den===0){beta=0}else{beta=(avgXY-(avgX*avgY))/den}alpha=avgY-beta*avgX;return{alpha:alpha,beta:beta,reset:def.noop,sample:function(x){return alpha+beta*(+x)}}}}});trends.define('moving-average',{label:'Moving average',model:function(options){var W=Math.max(+(def.get(options,'periods')||3),2);var sum=0;var avgValues=[];return{reset:function(){sum=0;avgValues.length=0},sample:function(x,y,i){var L=W;if(y!=null){avgValues.unshift(y);sum+=y;L=avgValues.length;if(L>W){sum-=avgValues.pop();L=W}}return sum/L}}}});trends.define('weighted-moving-average',{label:'Weighted Moving average',model:function(options){var W=Math.max(+(def.get(options,'periods')||3),2);var sum=0;var numer=0;var avgValues=[];var L=0;var denom=0;return{reset:function(){sum=numer=denom=L=0;avgValues.length=0},sample:function(x,y){if(y!=null){if(L<W){avgValues.push(y);L++;denom+=L;numer+=L*y;sum+=y}else{numer+=(L*y)-sum;sum+=y-avgValues[0];for(var j=1;j<W;j++){avgValues[j-1]=avgValues[j]}avgValues[W-1]=y}}return numer/denom}}}})});