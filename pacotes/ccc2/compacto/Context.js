def.type('pvc.visual.Context').init(function(panel,mark,event){this.chart=panel.chart;this.panel=panel;visualContext_update.call(this,mark,event)}).add({isPinned:false,pin:function(){this.isPinned=true;return this},finished:function(v){return this.sign.finished(v)},delegate:function(dv){return this.sign.delegate(dv)},getV1Series:function(){var s;var series=this.scene.firstAtoms&&(s=this.scene.firstAtoms[this.panel._getV1DimName('series')])&&s.rawValue;if(series==null){series='Series'}return series},getV1Category:function(){var c;return this.scene.firstAtoms&&(c=this.scene.firstAtoms[this.panel._getV1DimName('category')])&&c.rawValue},getV1Value:function(){var v;return this.scene.firstAtoms&&(v=this.scene.firstAtoms[this.panel._getV1DimName('value')])&&v.value},getV1Datum:function(){return this.panel._getV1Datum(this.scene)}});if(Object.defineProperty){try{Object.defineProperty(pvc.visual.Context.prototype,'parent',{get:function(){throw def.error.operationInvalid("The 'this.parent.index' idiom has no equivalent in this version. Please try 'this.pvMark.parent.index'.")}})}catch(ex){}}function visualContext_update(mark,event){this.event=event||null;this.pvMark=mark;var scene;if(mark){var sign=this.sign=mark.sign||null;if(sign){scene=mark.instance().data}if(!scene){this.index=null;scene=new pvc.visual.Scene(null,{panel:this.panel})}else{this.index=scene.childIndex()}}else{this.sign=null;this.index=null;scene=new pvc.visual.Scene(null,{panel:this.panel,group:this.chart.root.data})}this.scene=scene}